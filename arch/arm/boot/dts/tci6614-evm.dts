/dts-v1/;
/include/ "skeleton.dtsi"

/ {
	model = "Texas Instruments TCI6614 EVM";
	compatible = "ti,tci6614-evm";
	#address-cells = <1>;
	#size-cells = <1>;

	chosen {
		bootargs = "console=ttyS0,115200n8 mem=512M rootwait=1 rw ubi.mtd=2,2048 rootfstype=ubifs root=ubi0:rootfs";
	};

	memory {
		device_type = "memory";
		reg = <0x80000000 0x8000000>;
	};

	soc6614@2000000 {
		#address-cells = <1>;
		#size-cells = <1>;
		compatible = "simple-bus", "ti,tci6614-bus";
		ranges;

		hwqueue0: hwqueue@2a00000 {
			compatible = "ti,keystone-hwqueue";
			#address-cells = <1>;
			#size-cells = <1>;
			ranges;
			reg = <0x2a00000 0x20000	/* 0 - peek	*/
			       0x2a62000 0x6000		/* 1 - status	*/
			       0x2a68000 0x2000		/* 2 - config	*/
			       0x2a6a000 0x4000		/* 3 - region	*/
			       0x2a20000 0x20000>;	/* 4 - push/pop	*/
			range		= <0 0x1000>;
			regions		= <12 3>;
			linkram0	= <0x80000 0x4000>;
			link-index	= <0x1400 0x800>;
			queues {
				qpend-arm {
					values = <650 8>;
					irq-base= <41>;
					reserved;
				};
				general {
					values = <4000 64>;
				};
				pa {
					values = <640 9>;
					reserved;
				};
				infradma {
					values = <800 12>;
					reserved;
				};
				accumulator-low-0 {
					values = <0 32>;
					// pdsp-id, channel, entries, pacing mode, latency
					accumulator = <0 32 8 2 0>;
					irq-base = <363>;
					multi-queue;
					reserved;
				};
				accumulator-low-1 {
					values = <32 32>;
					// pdsp-id, channel, entries, pacing mode, latency
					accumulator = <0 33 8 2 0>;
					irq-base = <364>;
					multi-queue;
				};
				accumulator-low-2 {
					values = <64 32>;
					// pdsp-id, channel, entries, pacing mode, latency
					accumulator = <0 34 8 2 0>;
					irq-base = <365>;
					multi-queue;
				};
				accumulator-low-3 {
					values = <96 32>;
					// pdsp-id, channel, entries, pacing mode, latency
					accumulator = <0 35 8 2 0>;
					irq-base = <366>;
					multi-queue;
				};
				accumulator-high {
					values = <728 8>;
					// pdsp-id, channel, entries, pacing mode, latency
					accumulator = <0 20 8 2 0>;
					irq-base = <150>;
					reserved;
				};
				riotx {
					values = <672 1>;
					reserved;
				};
			};
			descriptors {
				pool-net {
					values = <768 128>;	/* num_desc desc_size */
				};
				pool-udma {
					values = <1152 128>;	/* num_desc desc_size */
				};
				pool-rio {
					values = <128 128>;
				};
			};
			pdsps {
				#address-cells = <1>;
				#size-cells = <1>;
				ranges;
				pdsp0@0x2a60000 {
					firmware = "keystone/qmss_pdsp_acc48_le_1_0_3_12.fw";
					reg = <0x2a60000 0x1000    /*iram */
					       0x2a6e000 0x1000    /*reg*/
					       0x2aa0000 0x3c8	   /*intd */
					       0x2ab8000 0x4000>;  /*cmd*/
					id = <0>;
				};
			};
		};

		infradma: pktdma@2a6c000 {
			compatible = "ti,keystone-pktdma";
			reg = <0x2a6c000 0x100		/* 0 - global  */
			       0x2a6c400 0x400		/* 1 - txchan  */
			       0x2a6c800 0x400		/* 2 - rxchan  */
			       0x2a6cc00 0x400		/* 3 - txsched */
			       0x2a6d000 0x400>;	/* 4 - rxflow  */
			loop-back;
			/* big-endian; */
			enable-all;
			/* debug; */
			/* rx-priority = <0>; */
			/* tx-priority = <0>; */
			channels {
				udmatx0 {
					transmit;
					label		= "udmatx0";
					pool		= "pool-udma";
					submit-queue	= <800>;
					complete-queue  = <0>;
					/* debug; */
					channel		= <0>;
					priority	= <1>;
					flowtag		= <0>;
				};
				udmatx1 {
					transmit;
					label		= "udmatx1";
					pool		= "pool-udma";
					submit-queue	= <801>;
					complete-queue  = <1>;
					/* debug; */
					channel		= <1>;
					priority	= <1>;
					flowtag		= <1>;
				};
				udmatx2 {
					transmit;
					label		= "udmatx2";
					pool		= "pool-udma";
					submit-queue	= <802>;
					complete-queue  = <2>;
					/* debug; */
					channel		= <2>;
					priority	= <1>;
					flowtag		= <2>;
				};
				udmatx3 {
					transmit;
					label		= "udmatx3";
					pool		= "pool-udma";
					submit-queue	= <803>;
					complete-queue  = <3>;
					/* debug; */
					channel		= <3>;
					priority	= <1>;
					flowtag		= <3>;
				};
				udmatx4 {
					transmit;
					label		= "udmatx4";
					pool		= "pool-udma";
					submit-queue	= <804>;
					complete-queue  = <4>;
					/* debug; */
					channel		= <4>;
					priority	= <1>;
					flowtag		= <4>;
				};
				udmatx5 {
					transmit;
					label		= "udmatx5";
					pool		= "pool-udma";
					submit-queue	= <805>;
					complete-queue  = <5>;
					/* debug; */
					channel		= <5>;
					priority	= <1>;
					flowtag		= <5>;
				};
				udmatx6 {
					transmit;
					label		= "udmatx6";
					pool		= "pool-udma";
					submit-queue	= <806>;
					complete-queue  = <6>;
					/* debug; */
					channel		= <6>;
					priority	= <1>;
					flowtag		= <6>;
				};
				udmatx7 {
					transmit;
					label		= "udmatx7";
					pool		= "pool-udma";
					submit-queue	= <807>;
					complete-queue  = <7>;
					/* debug; */
					channel		= <7>;
					priority	= <1>;
					flowtag		= <7>;
				};
				udmatx8 {
					transmit;
					label		= "udmatx8";
					pool		= "pool-udma";
					submit-queue	= <808>;
					complete-queue  = <8>;
					/* debug; */
					channel		= <8>;
					priority	= <1>;
					flowtag		= <8>;
				};
				udmatx9 {
					transmit;
					label		= "udmatx9";
					pool		= "pool-udma";
					submit-queue	= <809>;
					complete-queue  = <9>;
					/* debug; */
					channel		= <9>;
					priority	= <1>;
					flowtag		= <9>;
				};
				udmatx10 {
					transmit;
					label		= "udmatx10";
					pool		= "pool-udma";
					submit-queue	= <810>;
					complete-queue  = <10>;
					/* debug; */
					channel		= <10>;
					priority	= <1>;
					flowtag		= <10>;
				};
				udmatx11 {
					transmit;
					label		= "udmatx11";
					pool		= "pool-udma";
					submit-queue	= <811>;
					complete-queue  = <11>;
					/* debug; */
					channel		= <11>;
					priority	= <1>;
					flowtag		= <11>;
				};
				udmarx0 {
					receive;
					label		= "udmarx0";
					pool		= "pool-udma";
					/* submit-queue = <xx>; */
					complete-queue  = <16>;
					/* debug; */
					channel		= <0>;
					flow		= <0>;
				};
				udmarx1 {
					receive;
					label		= "udmarx1";
					pool		= "pool-udma";
					/* submit-queue = <xx>; */
					complete-queue  = <17>;
					/* debug; */
					channel		= <1>;
					flow		= <1>;
				};
				udmarx2 {
					receive;
					label		= "udmarx2";
					pool		= "pool-udma";
					/* submit-queue = <xx>; */
					complete-queue  = <18>;
					/* debug; */
					channel		= <2>;
					flow		= <2>;
				};
				udmarx3 {
					receive;
					label		= "udmarx3";
					pool		= "pool-udma";
					/* submit-queue = <xx>; */
					complete-queue  = <19>;
					/* debug; */
					channel		= <3>;
					flow		= <3>;
				};
				udmarx4 {
					receive;
					label		= "udmarx4";
					pool		= "pool-udma";
					/* submit-queue = <xx>; */
					complete-queue  = <20>;
					/* debug; */
					channel		= <4>;
					flow		= <4>;
				};
				udmarx5 {
					receive;
					label		= "udmarx5";
					pool		= "pool-udma";
					/* submit-queue = <xx>; */
					complete-queue  = <21>;
					/* debug; */
					channel		= <5>;
					flow		= <5>;
				};
				udmarx6 {
					receive;
					label		= "udmarx6";
					pool		= "pool-udma";
					/* submit-queue = <xx>; */
					complete-queue  = <22>;
					/* debug; */
					channel		= <6>;
					flow		= <6>;
				};
				udmarx7 {
					receive;
					label		= "udmarx7";
					pool		= "pool-udma";
					/* submit-queue = <xx>; */
					complete-queue  = <23>;
					/* debug; */
					channel		= <7>;
					flow		= <7>;
				};
				udmarx8 {
					receive;
					label		= "udmarx8";
					pool		= "pool-udma";
					/* submit-queue = <xx>; */
					complete-queue  = <24>;
					/* debug; */
					channel		= <8>;
					flow		= <8>;
				};
				udmarx9 {
					receive;
					label		= "udmarx9";
					pool		= "pool-udma";
					/* submit-queue = <xx>; */
					complete-queue  = <25>;
					/* debug; */
					channel		= <9>;
					flow		= <9>;
				};
				udmarx10 {
					receive;
					label		= "udmarx10";
					pool		= "pool-udma";
					/* submit-queue = <xx>; */
					complete-queue  = <26>;
					/* debug; */
					channel		= <10>;
					flow		= <10>;
				};
				udmarx11 {
					receive;
					label		= "udmarx11";
					pool		= "pool-udma";
					/* submit-queue = <xx>; */
					complete-queue  = <27>;
					/* debug; */
					channel		= <11>;
					flow		= <11>;
				};
			};
		};

		padma: pktdma@2004000 {
			compatible = "ti,keystone-pktdma";
			reg = <0x2004000 0x100		/* 0 - global  */
			       0x2004400 0x120		/* 1 - txchan  */
			       0x2004800 0x300		/* 2 - rxchan  */
			       0x2004c00 0x120		/* 3 - txsched */
			       0x2005000 0x400>;	/* 4 - rxflow  */
			/* loop-back;  */
			/* bigendian; */
			enable-all;
			/* debug; */
			/* rx-priority = <0>; */
			/* tx-priority = <0>; */
			channels {
				nettx {
					transmit;
					label		= "nettx";
					pool		= "pool-net";
					submit-queue	= <648>;
					/* complete-queue = <xx>; */
					/* debug; */
					/* channel = <0>; */
					/* priority = <1>; */
				};
				netrx {
					receive;
					label		= "netrx";
					pool		= "pool-net";
					/* submit-queue   = <xx>; */
					complete-queue = <650>;
					/* debug; */
					/* channel = <0>; */
					flow		= <30>;
				};
				satx {
					transmit;
					label		= "satx";
					pool		= "pool-net";
					submit-queue	= <646>;
				};
				patx-cmd {
					transmit;
					label		= "patx-cmd";
					pool		= "pool-net";
					submit-queue	= <640>;
					/* complete-queue = <xx>; */
					/* debug; */
					/* channel = <xx>; */
					/* priority = <1>; */
				};
				patx-dat {
					transmit;
					label		= "patx-dat";
					pool		= "pool-net";
					submit-queue	= <645>;
					/* complete-queue = <xx>; */
					/* debug; */
					/* channel = <xx>; */
					/* priority = <1>; */
				};
				parx {
					receive;
					label		= "parx";
					pool		= "pool-net";
					/* submit-queue   = <xx>; */
					/* complete-queue = <xx>; */
					/* debug; */
					/* channel = <0>; */
					flow		= <31>;
				};
			};
		};
	};
};
